<?xml version="1.0" encoding="UTF-8"?>
<view xmlns="http://asyncode.com/View"
	xmlns:mg="http://asyncode.com/Mongo"
	xmlns:op="http://asyncode.com/Interpreter"
	inherits="_settings_">

	<param name="id"/>
	<!--<param name="week" type="number" default="0"/>-->

	<condition name="isLoggedIn">$ss.loggedIn</condition>

	<set name="showConfidental" command="op:exec">$ss.ID is $.id or $ss.role is 'admin'</set>

	<set name="user"
			 command="mg:findOne"
			 mg:coll="users">
		{"_id":objectID($.id)}
	</set>

	<set name="reportsTo"
			 command="mg:findOne"
			 mg:coll="users"
			 before="layout">
		{"_id":objectID($.user.reportsTo)}
	</set>

	<set name="reportsToName" path="$.user" command="op:exec">
		$.reportsTo.fName+' '+$.reportsTo.sName
	</set>

	<!--<set name="lastMonday" command="op:exec" before="layout">-->
	<!--	date(now()+(date(now())-date([1970,1,5])).days%7)-->
	<!--</set>-->

	<!--<set name="currentYear" command="op:exec" before="layout">-->
	<!--	array(now())[0]-->
	<!--</set>-->

	<!--<set name="weeksInThisYear" command="op:exec" before="layout">-->
	<!--	int(round((now()-dateTime([2013,1,1,0,0])).days/7)+1)-->
	<!--</set>-->

	<!--<set name="reports"-->
	<!--		 command="mg:find"-->
	<!--		 mg:coll="users-weekReports"-->
	<!--		 mg:sort="week"-->
	<!--		 condition="$.showConfidental">-->
	<!--	{-->
	<!--		"user":$.id,-->
	<!--		"year":$.currentYear-->
	<!--	}-->
	<!--	<field name="week" show="t"/>-->
	<!--</set>-->

	<set name="worked"
			 command="mg:find"
			 mg:coll="workLog"
			 mg:sort="day"
			 condition="$.showConfidental">
		{
			"user":$.id,
			"day":{
				"$gt":now()+-30
				<!--"$lt":$.lastMonday+-(7*$.week-7)-->
			}
		}
		<field name="user" show="f"/>
	</set>

	<!--<set path="$.worked" name="started"-->
	<!--		 command="op:exec"-->
	<!--		 condition="$.showConfidental">-->
	<!--	time(localize(dateTime(date(!.day),!.started[0]),'Europe/Warsaw'))-->
	<!--</set>-->
	<!---->
	<!--<set path="$.worked" name="ended"-->
	<!--		 command="op:exec"-->
	<!--		 condition="$.showConfidental">-->
	<!--	!.ended and time(localize(dateTime(date(!.day),!.ended[-1]),'Europe/Warsaw')) or ''-->
	<!--</set>-->
	<!---->
	<!--<set path="$.worked" name="sum"-->
	<!--		 command="op:exec"-->
	<!--		 condition="$.showConfidental">-->
	<!--	!.ended-!.started-->
	<!--</set>-->
	<!---->
	<!--<set path="$.worked" name="comment"-->
	<!--		 command="op:exec"-->
	<!--		 condition="$.showConfidental">-->
	<!--	!.comment or '&lt;a href="/admin/workLog-addComment/'+!._id+'/">Dodaj&lt;ml name="addComment"/>&lt;/a>'-->
	<!--</set>-->
	<!---->
	<!--<unset path="$.worked" name="_id"-->
	<!--			 command="op:exec"-->
	<!--			 condition="$.showConfidental"/>-->

	<set name="tasksTODO"
			 command="mg:find"
			 mg:coll="todo_tasks"
			 mg:sort="due,addtime"
			 mg:direction="descending">
		{
			"done":false,
			<!--"$or":[-->
				<!--{"owner":$ss.ID},-->
			"contractor":$.id
			<!--]-->
		}
	</set>

	<!--<set name="tasksTODO" command="op:exec">-->
	<!--	reverse(sort($.tasksTODO,"priority"))-->
	<!--</set>-->

	<set name="tasksDone"
			 command="mg:find"
			 mg:coll="todo_tasks"
			 mg:limit="30"
			 mg:sort="donetime"
			 mg:dir2ection="ascending">
		{
			"done":true,
			"contractor":$.id
		}
	</set>

	<set name="users"
			 command="mg:find"
			 mg:coll="users"
			 mg:sort="sName"
			 mg:direction="ascending">
		{
			<!--"role":{"$in":["admin","user"]},-->
			"email":{"$ne":$ss.email}
		}
		<field name="fName" show="t"/>
		<field name="sName" show="t"/>
		<field name="suspended" show="t"/>
	</set>

	<set name="tasksAll" command="op:exec">
		[]+$.tasksTODO+$.tasksDone
	</set>

	<set name="ownerFName" path="$.tasksAll"
			 command="op:exec">
		!.owner is $ss.ID and 'Ja' or $.users.*[_id is !.owner].fName[0]
	</set>

	<set name="ownerSName" path="$.tasksAll"
			 command="op:exec">
		!.owner is $ss.ID and '' or $.users.*[_id is !.owner].sName[0]
	</set>

	<node name="tasksTODO" command="op:exec">
		$.tasksTODO
	</node>

	<node name="tasksDone" command="op:exec">
		$.tasksDone
	</node>

	<node name="worked"
				command="op:exec"
				condition="$.showConfidental">
		$.worked
	</node>

	<set name="hour" command="op:exec"
			 before="layout">
		$.user.workingFrom[0]+':'+$.user.workingFrom[1]
	</set>

	<node name="user" command="op:exec">
		$.user
	</node>

	<set name="editable"
			 condition="$ss.ID is $.id"
			 default="false"
			 before="layout">
		true
	</set>

	<set name="settingsAdmin"
			 before="layout"
			 default="''"
			 condition="$ss.role is 'admin' and $.user.role is not 'admin'">
		<a href="/users/api/makeAdmin/{{$.id}}/"><ml name="makeAdmin"/></a><br/>
	</set>

<!--	<set name="settingsSuspend"
			 before="layout"
			 default="''"
			 condition="$ss.role is 'admin' and not $.user.suspended">
		<a href="/api/user/suspend/{{$.id}}/"><ml name="suspendUser"/></a>
	</set>-->

	<set name="userSettings"
			 before="layout"
			 default="''"
			 condition="$ss.ID is $.user._id">
		<a href="/users/userSettings/"><ml name="userSettings"/></a><br/>
	</set>

	<!--<set name="settings"-->
	<!--		 before="layout"-->
	<!--		 condition="$ss.role is 'admin' and $.user.role is 'admin'">-->
	<!--	<a href="/api/revokeAdmin/{$.id}/">Cofnij prawa admina</a>-->
	<!--</set>-->

</view>
